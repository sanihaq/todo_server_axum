name: General

on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
    steps:
      - name: Setup | Checkout repository
        uses: actions/checkout@v2
      - name: Setup | Cache rust
        uses: Swatinem/rust-cache@v1
      - name: Setup | Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
      - name: Build | Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: "true"
    steps:
      - name: Setup | Checkout repository
        uses: actions/checkout@v2
      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
      - name: Setup | Cache rust
        uses: Swatinem/rust-cache@v1
      - name: Setup | Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Check | Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  fmt:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout repository
        uses: actions/checkout@v2
      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
      - name: Setup | Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - name: Check | Formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
