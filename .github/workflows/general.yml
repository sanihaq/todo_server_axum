name: General

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test-artifacts:
    name: Build test artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # By default actions/checkout checks out a merge commit. Check out the PR head instead.
          # https://github.com/actions/checkout#checkout-pull-request-head-commit-instead-of-merge-commit
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Build and archive tests
        run: cargo nextest archive --archive-file nextest-archive.tar.zst
      - name: Upload archive to workflow
        uses: actions/upload-artifact@v3
        with:
          name: nextest-archive
          path: nextest-archive.tar.zst
  
  run-tests-partitioned:
    name: Run tests with partitioning
    runs-on: ubuntu-latest
    needs: build-test-artifacts
    strategy:
      matrix:
        partition: [1, 2]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
    steps:
      # The source directory must be checked out. 
      - uses: actions/checkout@v2
        with:
          # By default actions/checkout checks out a merge commit. Check out the PR head instead.
          # https://github.com/actions/checkout#checkout-pull-request-head-commit-instead-of-merge-commit
          ref: ${{ github.event.pull_request.head.sha }}
      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
      # In this example, the Rust toolchain is not installed. cargo nextest's run phase does not
      # require Cargo. You can choose to install Rust if your tests require it, of course.
      # Instead, create ~/.cargo/bin as required by the install action.
      - run: mkdir -p ~/.cargo/bin
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Download archive
        uses: actions/download-artifact@v3
        with:
          name: nextest-archive
      - name: Run tests
        run: |
          ~/.cargo/bin/cargo-nextest nextest run --archive-file nextest-archive.tar.zst \
            --partition count:${{ matrix.partition }}/2

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: "true"
    steps:
      - name: Setup | Checkout repository
        uses: actions/checkout@v2
      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
      - name: Setup | Cache rust
        uses: Swatinem/rust-cache@v1
      - name: Setup | Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Check | Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  fmt:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout repository
        uses: actions/checkout@v2
      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
      - name: Setup | Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - name: Check | Formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
